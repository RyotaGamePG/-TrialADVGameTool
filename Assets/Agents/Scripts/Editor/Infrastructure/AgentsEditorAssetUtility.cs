// Generated by agent: 2025-10-07
using Agents.Editor.Infrastructure;
using Agents.Runtime.Config;
using Agents.Runtime.Evidence;
using Agents.Runtime.Story;
using UnityEditor;
using UnityEngine;

namespace Agents.Editor.Utility
{
    internal static class AgentsEditorAssetUtility
    {
        public static AgentsRuntimeConfig EnsureRuntimeConfig()
        {
            EnsureFolders();

            var config = AssetDatabase.LoadAssetAtPath<AgentsRuntimeConfig>(AgentsAssetPaths.ConfigAssetPath);
            if (config == null)
            {
                config = ScriptableObject.CreateInstance<AgentsRuntimeConfig>();
                AssetDatabase.CreateAsset(config, AgentsAssetPaths.ConfigAssetPath);
                AssetDatabase.SaveAssets();
            }

            var storyGraph = EnsureStoryGraph();
            var evidenceLibrary = EnsureEvidenceLibrary();

            var serialized = new SerializedObject(config);
            serialized.Update();
            serialized.FindProperty("_storyGraph").objectReferenceValue = storyGraph;
            serialized.FindProperty("_evidenceLibrary").objectReferenceValue = evidenceLibrary;
            serialized.ApplyModifiedPropertiesWithoutUndo();

            return config;
        }

        public static StoryGraph EnsureStoryGraph()
        {
            EnsureFolders();

            var storyGraph = AssetDatabase.LoadAssetAtPath<StoryGraph>(AgentsAssetPaths.StoryGraphPath);
            if (storyGraph == null)
            {
                storyGraph = ScriptableObject.CreateInstance<StoryGraph>();
                AssetDatabase.CreateAsset(storyGraph, AgentsAssetPaths.StoryGraphPath);
                AssetDatabase.SaveAssets();
            }

            return storyGraph;
        }

        public static EvidenceLibrary EnsureEvidenceLibrary()
        {
            EnsureFolders();

            var library = AssetDatabase.LoadAssetAtPath<EvidenceLibrary>(AgentsAssetPaths.EvidenceLibraryPath);
            if (library == null)
            {
                library = ScriptableObject.CreateInstance<EvidenceLibrary>();
                AssetDatabase.CreateAsset(library, AgentsAssetPaths.EvidenceLibraryPath);
                AssetDatabase.SaveAssets();
            }

            return library;
        }

        private static void EnsureFolders()
        {
            CreateFolderIfNeeded("Assets", "Agents");
            CreateFolderIfNeeded(AgentsAssetPaths.AgentsRoot, "Settings");
            CreateFolderIfNeeded(AgentsAssetPaths.AgentsRoot, "Data");
            CreateFolderIfNeeded(AgentsAssetPaths.AgentsRoot, "Scripts");
        }

        private static void CreateFolderIfNeeded(string parent, string child)
        {
            var path = $"{parent}/{child}";
            if (!AssetDatabase.IsValidFolder(path))
            {
                AssetDatabase.CreateFolder(parent, child);
            }
        }
    }
}
